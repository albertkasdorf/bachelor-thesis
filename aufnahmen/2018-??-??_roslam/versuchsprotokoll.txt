Fragen:
- Wie bekomme ich die ganzen Daten synchronisiert?
- Wie sehr kann man den Odometrie-Daten glauben?
- Wie sehr kann man den Laser-Odometrie-Daten glauben?
- Wie groß ist der Fehler zwischen der Messung, dem GT und der Schätzung. (Beacon/Pose)
- Nach welcher Zeitspanne konvergieren die Beacons zu ihrer richtigen Position?

Aufgaben:
- Teleop-Node
	- http://wiki.ros.org/teleop_twist_joy
	- http://yardbot.ca/2014/10/writing-custom-joystick-teleop-node-ros/
	- ~autorepeat_rate (double, default: 0.0 (disabled)): Rate in Hz at which a joystick that has a non-changing state will resend the previously sent message.
	- Test with TurtleSim
	- http://wiki.ros.org/ROS/Tutorials/UnderstandingTopics
	- Map-Funktion verwenden um vom Bereich 0-1 auf den Geschwindigkeitsbereich zu übertragen.
	- Unter-/Obere Grenze der Bereiche soll parametriert werden können
		- d.h. Nur der Bereich 0.3-1.0 soll gemappt werden
		- Werte unterhalb der Zielwerte werden verworfen, also gleich Null gesetzt.
		- Werte oberhalb der Zielwerte werden auf den oberen Zielwert gesetzt.

- Aufzeichnungsrichtlinien (RO-SLAM)
	+ Robotino Odom zurücksetzen
		+ rosservice call /reset_odometry 0 0 0
	+ Warten bis alle Beacons registiert sind (10 Sekunden)
		+ rostopic echo "/beacon/sensed_data[0]/id"
	- Beacon Platzierung
		+ Beacons auf keinen Fall symmetrisch plazieren.
		+ Beacon-Position muss im Nachhinein bestimmt werden können.
		? Beacons erhöht positionieren, damit sie vom Laser erkannt werden.
		- Karte erstellen mit Beacon-Positionen
	- Robotino Platzierung
		+ Horizontale wird an dem Türrahmen ausgerichtet
		+ Rückkehren zum Startpunkt, sinnvoll wegen Drift.
		- Startpunkt festlegen auf der Karte
		- Startpunkt mit Tape abkleben
	+ Skizze des Raums anfertigen mit Maßen
		+ Breite: 2.008m
		+ Segmentlänge: 4.062m
		+ Türbreite: 0.926m
		+ Türrahmen: 4.6cm
	- Platzierung von Kisten um Features für den LaserScan zu haben
	- Robotino Geschwindigkeit anpassen
		- Custom joystick teleop
			- [todo]
			- http://wiki.ros.org/teleop_twist_joy
			- http://yardbot.ca/2014/10/writing-custom-joystick-teleop-node-ros/
	- URDF-Modell anpassen
		- [todo] Position des Beacons anpassen


Versuch "Mean und Covariance pro Beacon aus dem MRPT-Framework bestimmen":
- CMultiMetricMap
	- m_beaconMap : CBeaconMap
		- getBeaconByID(...)
			- CBeacon
				- getCovarianceAndMean(...)
	- geometry_msgs/PoseWithCovariance
	- http://www.visiondummy.com/2014/04/draw-error-ellipse-representing-covariance-matrix/
	- https://gist.github.com/Piyush3dB/bf2c83a8eb7344798644

- CBeaconMap
	- begin()/end()/iterator
	- saveToMATLABScript3D(const std::string&, const char*, float)

- CBeacon
	- m_ID
	- getMean(mrpt::poses::CPoint3D&)
	- getCovarianceAndMean(mrpt::math::CMatrixDouble33&, mrpt::poses::CPoint3D&)
	- getAsMatlabDrawCommands(utils::CStringList&)

- CStringList
	- std::string getText()


Versuch "???":
- Entfernen aller Odom Transformationen
- beacon + laser als quelle einstellen

Versuch NLOS-RO-SLAM:
	- Ganz viele Stühle quer stellen und die Beacons dahinter stellen und dann um diese Hinternisse navigieren.